services:
  - type: web
    name: roleplay-chronicles
    env: python
    region: frankfurt
    python:
      version: 3.11.6
    buildCommand: |
      pip install -r requirements.txt
      export FLASK_APP=run.py
      
      # Create migrations directory in the correct location
      MIGRATIONS_DIR="/opt/render/project/src/migrations"
      echo "Creating migrations directory at $MIGRATIONS_DIR..."
      mkdir -p "$MIGRATIONS_DIR"
      
      # Initialize migrations if the directory is empty
      if [ -z "$(ls -A $MIGRATIONS_DIR)" ]; then
        echo "Initializing migrations..."
        flask db init --directory "$MIGRATIONS_DIR"
      fi
      
      # Create initial migration if needed
      echo "Creating migration..."
      flask db migrate -m "Initial migration" --directory "$MIGRATIONS_DIR"
      
      # Apply migrations
      echo "Applying migrations..."
      flask db upgrade --directory "$MIGRATIONS_DIR"
      
      # Run database setup
      echo "Running database setup..."
      python init_db.py
    startCommand: gunicorn "wsgi:app"
    envVars:
      # Python configuration
      - key: PYTHON_VERSION
        value: 3.11.6
      - key: PYTHONUNBUFFERED
        value: true
      - key: PYTHONHASHSEED
        value: random
      
      # Flask configuration
      - key: FLASK_APP
        value: run.py
      - key: FLASK_ENV
        value: production
      - key: SECRET_KEY
        generateValue: true
      
      # Supabase configuration - these should be set in your Render dashboard
      - key: SUPABASE_URL
        sync: false  # This means you'll need to set it manually in the dashboard
      - key: SUPABASE_KEY
        sync: false  # This means you'll need to set it manually in the dashboard
      - key: SUPABASE_DB_URL
        sync: false  # This means you'll need to set it manually in the dashboard
      
      # Database configuration
      - key: DATABASE_URL
        sync: false  # This means you'll need to set it manually in the dashboard
      
      # SQLAlchemy configuration
      - key: SQLALCHEMY_DATABASE_URI
        sync: false  # This means you'll need to set it manually in the dashboard
      - key: SQLALCHEMY_TRACK_MODIFICATIONS
        value: "false"
      
      # SSL configuration
      - key: PGSSLMODE
        value: require
      - key: PGSSLROOTCERT
        value: /etc/ssl/certs/ca-certificates.crt
      
      # Connection pooling
      - key: SQLALCHEMY_POOL_SIZE
        value: "5"
      - key: SQLALCHEMY_MAX_OVERFLOW
        value: "10"
      - key: SQLALCHEMY_POOL_TIMEOUT
        value: "30"
      - key: SQLALCHEMY_POOL_RECYCLE
        value: "300"
